{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "required": [
    "actions"
  ],
  "properties": {
    "retryAfterMs": {
      "type": "integer"
    },
    "actions": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "required": [
              "type",
              "path"
            ],
            "properties": {
              "path": {
                "description": "Path to the configuration file.",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Section"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "comment"
            ],
            "properties": {
              "comment": {
                "description": "Text of comment",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Comment"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "name",
              "parentFolderPath"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the new folder to create."
              },
              "parentFolderPath": {
                "type": "string",
                "description": "The relative URL of the parent folder where the new folder will be created."
              },
              "type": {
                "type": "string",
                "enum": [
                  "AddFolder"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type"
            ],
            "properties": {
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "data": {
                "$ref": "./Schemes/AddListItemsWithLookupsData.schema.json"
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for adding items."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between item additions in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "AddListItemsWithLookups"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "layoutType"
            ],
            "properties": {
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between operations in milliseconds."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts."
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "Content Type Identity to filter pages."
              },
              "listIdentity": {
                "type": "string",
                "description": "The List Identity where the pages are located."
              },
              "layoutType": {
                "enum": [
                  "FullWidthImage",
                  "NoImage",
                  "ColorBlock",
                  "CutInShape"
                ],
                "type": "string",
                "description": "The layout type to be applied to the title area."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "activeOnly": {
                "type": "boolean",
                "description": "Optional. If true, includes active posts, otherwise all posts"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ChangeTitleAreaInSitePages"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "EnableRatingsFeature"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "name",
              "parentContentTypeId"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the content type."
              },
              "group": {
                "type": "string",
                "description": "The group the content type belongs to."
              },
              "parentContentTypeId": {
                "type": "string",
                "description": "The ID of the parent content type.\n\nExamples of base content type IDs:\n- Item: 0x01\n- Document: 0x0101\n- Event: 0x0102\n- Task: 0x0108\n- Message: 0x0107\n\nYou can also use IDs of custom content types if you are creating a child content type."
              },
              "id": {
                "pattern": "^[a-fA-F0-9]{32}$",
                "type": "string",
                "description": "The GUID of the content type in format without dashes."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureContentType"
                ]
              },
              "description": {
                "type": "string",
                "description": "The description of the content type."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "listIdentity"
            ],
            "properties": {
              "listIdentity": {
                "type": "string",
                "description": "The list identity."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureContentTypeInList"
                ]
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "fieldInternalNames"
            ],
            "properties": {
              "fieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be ensured."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between field additions in milliseconds."
              },
              "updateChildren": {
                "type": "boolean",
                "description": "Flag to indicate whether to update child content types."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for adding fields."
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureFieldsInContentType"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "fieldInternalNames"
            ],
            "properties": {
              "fieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be ensured."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between item additions in milliseconds."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for adding items."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureFieldsInList"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "template",
              "url"
            ],
            "properties": {
              "template": {
                "enum": [
                  "NoListTemplate",
                  "GenericList",
                  "DocumentLibrary",
                  "Survey",
                  "Links",
                  "Announcements",
                  "Contacts",
                  "Events",
                  "Tasks",
                  "DiscussionBoard",
                  "PictureLibrary",
                  "DataSources",
                  "WebTemplateCatalog",
                  "UserInformation",
                  "WebPartCatalog",
                  "ListTemplateCatalog",
                  "XMLForm",
                  "MasterPageCatalog",
                  "NoCodeWorkflows",
                  "WorkflowProcess",
                  "WebPageLibrary",
                  "CustomGrid",
                  "SolutionCatalog",
                  "NoCodePublic",
                  "ThemeCatalog",
                  "DesignCatalog",
                  "AppDataCatalog",
                  "AppFilesCatalog",
                  "DataConnectionLibrary",
                  "WorkflowHistory",
                  "GanttTasks",
                  "HelpLibrary",
                  "AccessRequest",
                  "PromotedLinks",
                  "TasksWithTimelineAndHierarchy",
                  "MaintenanceLogs",
                  "Meetings",
                  "Agenda",
                  "MeetingUser",
                  "Decision",
                  "MeetingObjective",
                  "TextBox",
                  "ThingsToBring",
                  "HomePageLibrary",
                  "Posts",
                  "Comments",
                  "Categories",
                  "Facility",
                  "Whereabouts",
                  "CallTrack",
                  "Circulation",
                  "Timecard",
                  "Holidays",
                  "IMEDic",
                  "ExternalList",
                  "MySiteDocumentLibrary",
                  "IssueTracking",
                  "AdminTasks",
                  "HealthRules",
                  "HealthReports",
                  "DeveloperSiteDraftApps",
                  "ContentCenterModelLibrary",
                  "ContentCenterPrimeLibrary",
                  "ContentCenterSampleLibrary",
                  "AccessApp",
                  "AlchemyMobileForm",
                  "AlchemyApprovalWorkflow",
                  "SharingLinks",
                  "HashtagStore",
                  "RecipesTable",
                  "FormulasTable",
                  "WebTemplateExtensionsList",
                  "ItemReferenceCollection",
                  "ItemReferenceReference",
                  "ItemReferenceReferenceCollection",
                  "InvalidType"
                ],
                "type": "string",
                "description": "Template for the list."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureList"
                ]
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "url": {
                "pattern": "^(?!http|/).*",
                "type": "string",
                "description": "Relative URL for the list."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "termGroupName",
              "termSetName",
              "termNames"
            ],
            "properties": {
              "termGroupName": {
                "type": "string",
                "description": "The name of the term group."
              },
              "termNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of term names to be created."
              },
              "termSetName": {
                "type": "string",
                "description": "The name of the term set."
              },
              "retryInterval": {
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureTerms"
                ]
              },
              "maxRetries": {
                "type": "integer",
                "description": "Maximum number of retry attempts for term creation."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity"
            ],
            "properties": {
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for publishing pages."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between page publishing in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "PublishSitePagesByContentType"
                ]
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The identifier of the content type of the items to be published."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "targetListIdentity",
              "lookupFieldInternalNames",
              "targetLookupFieldName"
            ],
            "properties": {
              "lookupFieldInternalNames": {
                "type": "string",
                "description": "Internal name of the lookup fields in the source list that need to be reflected to the target list."
              },
              "targetLookupFieldName": {
                "type": "string",
                "description": "Internal name of the lookup field in the target list that will store the reflected lookup value from the source list."
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "Content type identity of the items in the source list."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the source list from which the lookup values are taken."
              },
              "targetListIdentity": {
                "type": "string",
                "description": "The identity of the target list to which the lookup values will be reflected."
              },
              "type": {
                "type": "string",
                "enum": [
                  "ReflectLookups"
                ]
              },
              "targetContentTypeIdentity": {
                "type": "string",
                "description": "Content type identity of the items in the target list."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "RemoveContentType"
                ]
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "listIdentity"
            ],
            "properties": {
              "listIdentity": {
                "type": "string",
                "description": "The list identity."
              },
              "type": {
                "type": "string",
                "enum": [
                  "RemoveContentTypeFromList"
                ]
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "fieldInternalNames"
            ],
            "properties": {
              "doNotUpdateChildren": {
                "type": "boolean",
                "description": "Do not update child content types."
              },
              "fieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be removed."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between field removals in milliseconds."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for removing fields."
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "RemoveFieldsFromContentType"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "fieldInternalNames"
            ],
            "properties": {
              "fieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be removed."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between field removals in milliseconds."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for removing fields."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "RemoveFieldsFromList"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "fieldInternalNames"
            ],
            "properties": {
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "fieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be removed."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for removing fields."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between field removals in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "RemoveFieldsFromSiteColumns"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "RemoveListIfExist"
                ]
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "fieldOrder"
            ],
            "properties": {
              "fieldOrder": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The order of fields in the content type."
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetContentTypeFieldOrder"
                ]
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The name of the content type."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "requiredFieldInternalNames"
            ],
            "properties": {
              "requiredFieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be set as required."
              },
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between field updates in milliseconds."
              },
              "updateChildren": {
                "type": "boolean",
                "description": "Flag to indicate whether to update child content types."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for updating fields."
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetContentTypeRequiredFields"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "contentTypeIdentity",
              "listIdentity"
            ],
            "properties": {
              "listIdentity": {
                "type": "string",
                "description": "The list identity."
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetDefaultContentTypeToList"
                ]
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "The content Type Identity."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "indexedFieldInternalNames"
            ],
            "properties": {
              "shortDelay": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Short delay between field updates in milliseconds."
              },
              "attempts": {
                "minimum": 1,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Maximum number of retry attempts for indexing fields."
              },
              "indexedFieldInternalNames": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Array of field internal names to be indexed."
              },
              "listIdentity": {
                "type": "string",
                "description": "The list title or ID."
              },
              "retryAfterMs": {
                "minimum": 0,
                "maximum": 2147483647,
                "type": "integer",
                "description": "Interval between retry attempts in milliseconds."
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetIndexedFieldsInList"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "groupTitle",
              "permissions"
            ],
            "properties": {
              "groupTitle": {
                "type": "string",
                "description": "Choose a group title or provide a custom one:\n\n{{AssociatedOwnerGroup}}: Default owner group.\n{{AssociatedMemberGroup}}: Default member group.\n{{AssociatedVisitorGroup}}: Default visitor group."
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetListPermissions"
                ]
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "permissions": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Choose a permission level:\n\nFull Control: Has full control.\nDesign: Can view, add, update, delete, approve, and customize.\nEdit: Can add, edit and delete lists; can view, add, update and delete list items and documents.\nContribute: Can view, add, update, and delete list items and documents.\nRead: Can view pages and list items and download documents.\n\nYou can also provide a custom permission level."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity",
              "ratingType"
            ],
            "properties": {
              "ratingType": {
                "enum": [
                  "Likes",
                  "Ratings",
                  "None"
                ],
                "type": "string",
                "description": "The type of rating for the list."
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetListRating"
                ]
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "SetListSettings"
                ]
              },
              "description": {
                "type": "string",
                "description": "Description for the list."
              },
              "enableContentTypes": {
                "type": "boolean",
                "description": "Flag to indicate if content types are enabled."
              },
              "resetRoleInheritance": {
                "type": "boolean",
                "description": "Reset permissions inheritance to inherit from the parent."
              },
              "enableMinorVersions": {
                "type": "boolean",
                "description": "Flag to indicate if minor versioning is enabled."
              },
              "copyRoleAssignments": {
                "type": "boolean",
                "description": "Copy permissions from the parent when breaking inheritance."
              },
              "majorVersions": {
                "minimum": 0,
                "maximum": 50000,
                "type": "integer",
                "description": "The number of major versions to keep."
              },
              "minorVersions": {
                "minimum": 0,
                "maximum": 50000,
                "type": "integer",
                "description": "The number of minor versions to keep."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "writeSecurity": {
                "enum": [
                  1,
                  2,
                  4
                ],
                "type": "integer",
                "description": "Determines the Write permissions for items in the list. Options: \n1 (Write access to all items), \n2 (Write access only to own items), \n4 (No write access, read-only list)."
              },
              "readSecurity": {
                "enum": [
                  1,
                  2
                ],
                "type": "integer",
                "description": "Specifies the Read access level for items in the list. Options are: \n1 (All users have Read access to all items) \n2 (Users have Read access only to items they create)."
              },
              "title": {
                "type": "string",
                "description": "Title for the list."
              },
              "folderEnable": {
                "type": "boolean",
                "description": "Flag to indicate if folder creation is enabled."
              },
              "ratingType": {
                "enum": [
                  "Likes",
                  "Ratings",
                  "None"
                ],
                "type": "string",
                "description": "The type of rating for the list."
              },
              "breakRoleInheritance": {
                "type": "boolean",
                "description": "Break permissions inheritance from the parent."
              },
              "enableCommenting": {
                "type": "boolean",
                "description": "Flag to indicate if the comments are enabled"
              },
              "enableVersioning": {
                "type": "boolean",
                "description": "Flag to indicate if versioning is enabled."
              },
              "hidden": {
                "type": "boolean",
                "description": "Flag to indicate if the list is hidden from the user interface."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "SetListView"
                ]
              },
              "fields": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Fields to be included in the view."
              },
              "appendFields": {
                "type": "boolean",
                "description": "Specifies whether to append fields to the view or overwrite them."
              },
              "viewName": {
                "type": "string",
                "description": "The name of the view. If not specified, the default view will be used."
              },
              "rowLimit": {
                "type": "integer",
                "description": "Number of rows to be displayed in a page."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "orderByFields": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The OrderBy fields for sorting."
              },
              "isDefault": {
                "type": "boolean",
                "description": "Specifies whether the view is the default view."
              },
              "isPersonal": {
                "type": "boolean",
                "description": "Specifies whether the view is a personal view."
              },
              "aggregations": {
                "$ref": "./Schemes/Aggregations.schema.json"
              },
              "groupByFields": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The GroupBy fields for grouping."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "listIdentity"
            ],
            "properties": {
              "mappingData": {
                "$ref": "./Schemes/SetLookupFieldsFromChoiceFieldsMappingData.schema.json"
              },
              "contentTypeIdentity": {
                "type": "string",
                "description": "Optional. The identifier of the content type to filter the items to be updated. If not specified, all items in the list will be updated."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identifier (ID, Title, or Url) of the list where the items to be updated are located."
              },
              "activeOnly": {
                "type": "boolean",
                "description": "Optional. If true, includes active posts, otherwise all posts"
              },
              "lookupListMapping": {
                "$ref": "./Schemes/SetLookupFieldsFromChoiceFieldsLookupListMapping.schema.json"
              },
              "type": {
                "type": "string",
                "enum": [
                  "SetLookupFieldsFromChoiceFieldsBatch"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName",
              "formula",
              "resultType"
            ],
            "properties": {
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "formula": {
                "type": "string",
                "description": "The formula for the calculated field."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "resultType": {
                "enum": [
                  "Text",
                  "DateTime",
                  "Number",
                  "Currency",
                  "Boolean"
                ],
                "type": "string",
                "description": "The result type of the calculated field."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureCalculatedField"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName",
              "choices"
            ],
            "properties": {
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              },
              "defaultValue": {
                "type": "string",
                "description": "The default value for the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "choices": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The choices for the field."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureChoiceField"
                ]
              },
              "allowMultipleValues": {
                "type": "boolean",
                "description": "Flag to indicate if the field allows multiple choices."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName",
              "dateFormat",
              "friendlyDisplayFormat"
            ],
            "properties": {
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              },
              "defaultValue": {
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2})?$",
                "type": "string",
                "description": "The default value for the field (in ISO format: YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss)."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "friendlyDisplayFormat": {
                "enum": [
                  "Relative",
                  "Disabled"
                ],
                "type": "string",
                "description": "The friendly display format: Relative or Disabled."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "dateFormat": {
                "enum": [
                  "DateOnly",
                  "DateTime"
                ],
                "type": "string",
                "description": "The date format: DateOnly or DateTime."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureDateField"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName",
              "lookupListIdentity",
              "lookupField"
            ],
            "properties": {
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "lookupField": {
                "type": "string",
                "description": "The internal name of the field in the lookup list."
              },
              "lookupListIdentity": {
                "type": "string",
                "description": "The name of the lookup list."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureLookupField"
                ]
              },
              "allowMultipleValues": {
                "type": "boolean",
                "description": "Flag to indicate if the field allows multiple values."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "EnsureNumberField"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "maxValue": {
                "minimum": 0.0,
                "maximum": 1.7976931348623157E+308,
                "type": "integer",
                "description": "The maximum allowed value for the field."
              },
              "showAsPercentage": {
                "type": "boolean",
                "description": "Flag to indicate if the field should be shown as a percentage."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "minValue": {
                "minimum": 0.0,
                "maximum": 1.7976931348623157E+308,
                "type": "integer",
                "description": "The minimum allowed value for the field."
              },
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "defaultValue": {
                "minimum": 0.0,
                "maximum": 1.7976931348623157E+308,
                "type": "integer",
                "description": "The default value for the field."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName",
              "termGroupName",
              "termSetName"
            ],
            "properties": {
              "termGroupName": {
                "type": "string",
                "description": "The name of the term group."
              },
              "defaultValue": {
                "type": "string",
                "description": "The default value for the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "termSetName": {
                "type": "string",
                "description": "The name of the term set."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureTaxonomyField"
                ]
              },
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName"
            ],
            "properties": {
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              },
              "defaultValue": {
                "type": "string",
                "description": "The default value for the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureTextField"
                ]
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName",
              "userSelectionMode"
            ],
            "properties": {
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "userSelectionMode": {
                "enum": [
                  "PeopleOnly",
                  "PeopleAndGroups"
                ],
                "type": "string",
                "description": "User selection mode."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "Flag to enforce unique values for the field."
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureUserField"
                ]
              },
              "allowMultipleValues": {
                "type": "boolean",
                "description": "Flag to indicate if the field allows multiple users."
              }
            },
            "type": "object"
          },
          {
            "required": [
              "type",
              "displayName",
              "internalName"
            ],
            "properties": {
              "fieldId": {
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "type": "string",
                "description": "The GUID for the field."
              },
              "defaultValue": {
                "type": "boolean",
                "description": "The default value for the field."
              },
              "internalName": {
                "type": "string",
                "description": "The internal name of the field."
              },
              "group": {
                "type": "string",
                "description": "The group the field belongs to."
              },
              "fieldFormatter": {
                "$ref": "https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json"
              },
              "listIdentity": {
                "type": "string",
                "description": "The identity of the list."
              },
              "required": {
                "type": "boolean",
                "description": "Flag to indicate if the field is required."
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the field."
              },
              "type": {
                "type": "string",
                "enum": [
                  "EnsureYesNoField"
                ]
              }
            },
            "type": "object"
          }
        ]
      }
    },
    "shortDelay": {
      "type": "integer"
    },
    "attempts": {
      "type": "integer"
    }
  },
  "type": "object"
}
